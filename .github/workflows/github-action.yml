name: Continuous integration/Continuous Deployment

on:
    push:
      branches: [main]
    pull_request:
      branches: [main]

jobs:
    backend-tests:
        runs-on: ubuntu-latest

        defaults:
            run:
             working-directory: back
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Java JDK
              uses: actions/setup-java@v4
              with: 
                distribution: temurin
                java-version: 21
            
            - name: Build project
              run: mvn clean install

            - name: Run tests
              run: mvn verify

            - name: Generate Jacoco reports
              run: mvn test

            - name: Upload Jacoco reports
              uses: actions/upload-artifact@v4
              with:
                name: jacoco-reports
                path: back/target/surefire-reports/*

    frontend-tests:
        runs-on: ubuntu-latest

        defaults:
            run:
                working-directory: front
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                node-version: 20
            
            - name: Install dependencies
              run: npm install

            - name: Run tests
              run: npm run test

            - name: Generate Jest reports
              run: npm run test:coverage

            - name: Upload Jest reports
              uses: actions/upload-artifact@v4
              with:
                name: jest-reports
                path: front/coverage/jest/*

    deploy:
        runs-on: ubuntu-latest
        needs: [frontend-tests, backend-tests, SonarQube-Analysis-frontend, SonarQube-Analysis-backend]
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                username: ${{ secrets.DOCKER_HUB_USERNAME}}
                password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN}}

            - name: Build and push Agular Docker image
              uses: docker/build-push-action@v4
              with:
                context: ./front
                file: front/Dockerfile
                push: true
                tags: ${{ secrets.DOCKER_HUB_USERNAME }}/starterfront:latest, ${{ secrets.DOCKER_HUB_USERNAME }}/starterfront:${{github.run_number}}
            - name: Build and push Spring Boot Docker image
              uses: docker/build-push-action@v4
              with:
                context: ./back
                file: back/Dockerfile
                push: true
                tags: ${{ secrets.DOCKER_HUB_USERNAME }}/starterback:latest, ${{ secrets.DOCKER_HUB_USERNAME }}/starterback:${{github.run_number}}
              
    SonarQube-Analysis-backend:
      runs-on: ubuntu-latest
      defaults:
        run:
          working-directory: back
      steps:
        - uses: actions/checkout@v3
          with:
            fetch-depth: 0
        - name: Set up JDK
          uses: actions/setup-java@v1
          with:
            java-version: 21
        - name: Cache SonarQube packages
          uses: actions/cache@v1
          with:
            path: ~/.sonar/cache
            key: ${{ runner.os }}-sonar
            restore-keys: ${{ runner.os }}-sonar
        - name: Cache Maven packages
          uses: actions/cache@v1
          with:
            path: ~/.m2
            key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
            restore-keys: ${{ runner.os }}-m2
        - name: Build and analyse
          env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            SONAR_HOST_URL: "${{ secrets.SONAR_HOST_URL }}"
          run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Mon-Starter-CI-CD -Dsonar.projectName='Mon-Starter-Analysis'

    SonarQube-Analysis-frontend:
      runs-on: ubuntu-latest
      defaults:
        run:
          working-directory: front
      steps:
        - name: Checkout
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
        - name: Install ddependencies
          run: npm install
        - name: Install scanner
          run: npm install -g sonarqube-scanner
        - name: Run Sonar scanner
          env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          run: |
            sonar-scanner \
              -Dsonar.projectKey=MonStarter-Frontend \
              -Dsonar.projectName='Mon Starter Frontend' \
              -Dsonar.sources=./src \